"use strict";(self.webpackChunkdocs_roll=self.webpackChunkdocs_roll||[]).push([[674],{1119:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>m,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var r=n(8168),o=(n(6540),n(5680));const l={},a="Installation",i={unversionedId:"English/QuickStart/installation",id:"English/QuickStart/installation",title:"Installation",description:"\ud83d\udc33 Install from Docker",source:"@site/docs/English/QuickStart/installation.md",sourceDirName:"English/QuickStart",slug:"/English/QuickStart/installation",permalink:"/ROLL/docs/English/QuickStart/installation",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/English/QuickStart/installation.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Configuration Guide",permalink:"/ROLL/docs/English/QuickStart/config_guide"},next:{title:"Comprehensive Guide: Using the Agentic Part of ROLL",permalink:"/ROLL/docs/English/StepByStep/agent_pipeline_start"}},c={},s=[{value:"\ud83d\udc33 Install from Docker",id:"-install-from-docker",level:2},{value:"\ud83d\udee0\ufe0f Install from Custom Environment",id:"\ufe0f-install-from-custom-environment",level:2},{value:"\ud83d\udd04 About Model Checkpoint Format",id:"-about-model-checkpoint-format",level:2}],u={toc:s},p="wrapper";function m({components:e,...t}){return(0,o.yg)(p,(0,r.A)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,o.yg)("h1",{id:"installation"},"Installation"),(0,o.yg)("h2",{id:"-install-from-docker"},"\ud83d\udc33 Install from Docker"),(0,o.yg)("p",null,"We provide pre-built Docker images for a quick start (Links will be updated):"),(0,o.yg)("ul",null,(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"torch2.6.0 + SGlang0.4.6"),": roll-registry.cn-hangzhou.cr.aliyuncs.com/roll/pytorch:nvcr-24.05-py3-torch260-sglang046"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"torch2.6.0 + vLLM0.8.4"),": roll-registry.cn-hangzhou.cr.aliyuncs.com/roll/pytorch:nvcr-24.05-py3-torch260-vllm084"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"torch2.5.1 + SGlang0.4.3"),": roll-registry.cn-hangzhou.cr.aliyuncs.com/roll/pytorch:nvcr-24.05-py3-torch251-sglang043"),(0,o.yg)("li",{parentName:"ul"},(0,o.yg)("inlineCode",{parentName:"li"},"torch2.5.1 + vLLM0.7.3"),": roll-registry.cn-hangzhou.cr.aliyuncs.com/roll/pytorch:nvcr-24.05-py3-torch251-vllm073")),(0,o.yg)("p",null,"You can also find Dockerfiles under the ",(0,o.yg)("inlineCode",{parentName:"p"},"docker/")," directory to build your own images."),(0,o.yg)("h2",{id:"\ufe0f-install-from-custom-environment"},"\ud83d\udee0\ufe0f Install from Custom Environment"),(0,o.yg)("p",null,"If our pre-built Docker images are not compatible with your environment, you can install ROLL and its dependencies in your Python environment. Please ensure you meet the following prerequisites:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"# Prerequisites\nCUDA Version >= 12.4\ncuDNN Version >= 9.1.0\nPyTorch >= 2.5.1\nSGlang >= 0.4.3\nvLLM >= 0.7.3\n\n# Clone the repository and install\ngit clone https://github.com/alibaba/ROLL.git\ncd ROLL\npip install -r requirements.txt # Or follow your specific installation steps\n# For development, consider: pip install -e .\n")),(0,o.yg)("h2",{id:"-about-model-checkpoint-format"},"\ud83d\udd04 About Model Checkpoint Format"),(0,o.yg)("p",null,"For ",(0,o.yg)("inlineCode",{parentName:"p"},"MegatronStrategy"),", model checkpoints are saved in Megatron format by default. To convert them back to HuggingFace format, please use the following command:"),(0,o.yg)("pre",null,(0,o.yg)("code",{parentName:"pre",className:"language-bash"},"python mcore_adapter/tools/convert.py --checkpoint_path path_to_megatron_model --output_path path_to_output_hf_model\n")))}m.isMDXComponent=!0},5680:(e,t,n)=>{n.d(t,{xA:()=>u,yg:()=>y});var r=n(6540);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter(function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable})),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach(function(t){o(e,t,n[t])}):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach(function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))})}return e}function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},g=r.forwardRef(function(e,t){var n=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),g=o,y=p["".concat(c,".").concat(g)]||p[g]||m[g]||l;return n?r.createElement(y,a(a({ref:t},u),{},{components:n})):r.createElement(y,a({ref:t},u))});function y(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var l=n.length,a=new Array(l);a[0]=g;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:o,a[1]=i;for(var s=2;s<l;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}g.displayName="MDXCreateElement"}}]);